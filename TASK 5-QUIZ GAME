import tkinter as tk
from tkinter import messagebox, ttk
from ttkbootstrap import Style
from quiz_data import quiz_data

def show_second_page():
    welcome_frame.pack_forget()
    quiz_frame.pack()

# Function to display the current question and choices
def show_question():
    # Get the current question from the quiz_data list
    question = quiz_data[current_question]
    qs_label.config(text=question["question"])

    # Display the choices on the buttons
    choices = question["choices"]
    for i in range(4):
        choice_btns[i].config(text=choices[i], state="normal")  # Reset button state

    # Clear the feedback label and disable the next button
    feedback_label.config(text="")
    next_btn.config(state="disabled")

# Function to check the selected answer and provide feedback
def check_answer(choice):
    # Get the current question from the quiz_data list
    question = quiz_data[current_question]
    selected_choice = choice_btns[choice].cget("text")

    # Check if the selected choice matches the correct answer
    if selected_choice == question["answer"]:
        # Update the score and display it
        global score
        score += 1
        score_label.config(text="Score: {}/{}".format(score, len(quiz_data)))
        feedback_label.config(text="Correct!", foreground="green")
    else:
        feedback_label.config(text="Incorrect!", foreground="red")

    # Disable all choice buttons and enable the next button
    for button in choice_btns:
        button.config(state="disabled")
    next_btn.config(state="normal")

# Function to move to the next question
def next_question():
    global current_question
    current_question += 1

    if current_question < len(quiz_data):
        # If there are more questions, show the next question
        show_question()
    else:
        # If all questions have been answered, display the final score and end the quiz
        messagebox.showinfo("Quiz Completed",
                            "Quiz Completed! Final score: {}/{}".format(score, len(quiz_data)))
        root.destroy()

# Create the main window
root = tk.Tk()
root.title("Quiz App")
root.geometry("600x500")
style = Style(theme="flatly")

# Welcome Page
welcome_frame = tk.Frame(root)
welcome_label = tk.Label(welcome_frame, text="Welcome to the Awesome Quiz Game!!\n\nRules:\n1. Follow instructions carefully.\n2. Have fun while coding!\n3. Feel free to explore and ask questions.")
welcome_label.pack(padx=20, pady=20)
next_button = tk.Button(welcome_frame, text="Next", command=show_second_page)
next_button.pack(pady=10)
welcome_frame.pack()

# Quiz Page
quiz_frame = tk.Frame(root)
style.configure("TLabel", font=("Helvetica", 20))
style.configure("TButton", font=("Helvetica", 16))
qs_label = ttk.Label(
    quiz_frame,
    anchor="center",
    wraplength=500,
    padding=10
)
qs_label.pack(pady=10)

choice_btns = []
for i in range(4):
    button = ttk.Button(
        quiz_frame,
        command=lambda i=i: check_answer(i)
    )
    button.pack(pady=5)
    choice_btns.append(button)

feedback_label = ttk.Label(
    quiz_frame,
    anchor="center",
    padding=10
)
feedback_label.pack(pady=10)

score = 0
score_label = ttk.Label(
    quiz_frame,
    text="Score: 0/{}".format(len(quiz_data)),
    anchor="center",
    padding=10
)
score_label.pack(pady=10)

next_btn = ttk.Button(
    quiz_frame,
    text="Next",
    command=next_question,
    state="disabled"
)
next_btn.pack(pady=10)

current_question = 0
show_question()

# Run the Tkinter event loop
root.mainloop()


quiz_data.py:
quiz_data = [
    {
        "question": "Who developed Python Programming Language?",
        "choices": ["Wick van Rossum", "Rasmus Lerdorf", "Guido van Rossum", "Niene Stom"],
        "answer": "Guido van Rossum"
    },
    {
        "question": "Which type of Programming does Python support?",
        "choices": ["object-oriented programming", "structured programming", "functional programming", "all of the mentioned"],
        "answer": "object-oriented programming"
    },
    {
        "question": "Is Python case sensitive when dealing with identifiers?",
        "choices": ["no", "yes", "machine dependent", "none of the mentioned"],
        "answer": "yes"
    },
    {
        "question": "Which of the following is the correct extension of the Python file?",
        "choices": [".python", ".pl", ".py", ".p"],
        "answer": ".py"
    }
    # Add more questions here
]

# Print the quiz data
for question_data in quiz_data:
    print("Question:", question_data["question"])
    print("Choices:", question_data["choices"])
    print("Answer:", question_data["answer"])
    print()


